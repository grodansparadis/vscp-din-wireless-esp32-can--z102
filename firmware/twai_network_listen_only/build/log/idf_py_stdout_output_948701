[1/9] Performing build step for 'bootloader'
[1/1] cd /usr/local/src/VSCP/vscp-din-wireless-esp32-can-z102/firmware/twai_network_listen_only/build/bootloader/esp-idf/esptool_py && /home/akhe/.espressif/python_env/idf5.1_py3.10_env/bin/python /usr/local/src/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /usr/local/src/VSCP/vscp-din-wireless-esp32-can-z102/firmware/twai_network_listen_only/build/bootloader/bootloader.bin
Bootloader binary size 0x4e60 bytes. 0x31a0 bytes (39%) free.
[2/7] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/twai_network_example_listen_only_main.c.obj
[3/7] Linking C static library esp-idf/main/libmain.a
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable twai_network_listen_only.elf
[6/7] Generating binary image from built executable
esptool.py v4.2.1
Creating esp32c3 image...
Merged 1 ELF section
Successfully created esp32c3 image.
Generated /usr/local/src/VSCP/vscp-din-wireless-esp32-can-z102/firmware/twai_network_listen_only/build/twai_network_listen_only.bin
[7/7] cd /usr/local/src/VSCP/vscp-din-wireless-esp32-can-z102/firmware/twai_network_listen_only/build/esp-idf/esptool_py && /home/akhe/.espressif/python_env/idf5.1_py3.10_env/bin/python /usr/local/src/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /usr/local/src/VSCP/vscp-din-wireless-esp32-can-z102/firmware/twai_network_listen_only/build/partition_table/partition-table.bin /usr/local/src/VSCP/vscp-din-wireless-esp32-can-z102/firmware/twai_network_listen_only/build/twai_network_listen_only.bin
twai_network_listen_only.bin binary size 0x286c0 bytes. Smallest app partition is 0x100000 bytes. 0xd7940 bytes (84%) free.
